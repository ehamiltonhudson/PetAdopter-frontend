{"ast":null,"code":"import _classCallCheck from \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/src/components/MyPetsButton.js\";\nimport React from 'react';\nimport PetCard from './PetCard';\n\nvar MyPetsButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyPetsButton, _React$Component);\n\n  function MyPetsButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyPetsButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyPetsButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleAddOrRemove = function (userId, petId) {\n      console.log(\"userId in myPetsButton\", userId);\n      console.log(\"petId in myPetsButton\", petId); // console.log(\"petId in MyPetsButton\", petId)\n      // console.log(\"this.props.myPets in MyPetsButton\", this.props.myPets)\n      //   console.log(\"this.props.myAdoptedPets in MyPetsButton\", this.props.myAdoptedPets)\n      // let pet = this.props.pets.find(pet => pet.id === this.props.petId)\n      // console.log(\"pet in addorremoce\", pet)\n      // let myPetMatchIds = this.props.myPets.map(myPet => myPet.pet_id)\n      // console.log(\"myPetMatchIds in MyPetsButton\", myPetMatchIds)\n      // let matchedPet = this.props.myPets.find(petMatch => petMatch.pet_id === this.props.petId)\n      // console.log(\"matchedPet in MyPetsButton\", matchedPet)\n      //   if (!this.props.myAdoptedPets.includes(pet) && myPetMatchIds.includes(petId)) {\n      //    return <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n      //  } else if (!pet.adopted && myPetMatchIds.includes(petId)) {\n      //     return (\n      //       <div>\n      //         <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n      //         <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n      //       </div>\n      //     )\n      // } else if (!pet.adopted && !this.props.myAdoptedPets.includes(pet)) {\n      //   return (\n      //     <div>\n      //       <button className=\"ui button\" onClick={()=>this.props.handleAdopt(this.props.currentUser.id, pet.id)}>Adopt</button>\n      //       <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n      //     </div>\n      //   )\n      // } else if (pet.adopted && !this.props.myAdoptedPets.includes(pet)) {\n      //   return (\n      //     <div>\n      //       <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n      //     </div>\n      //   )\n      // } else if (pet.adopted && myPetMatchIds.includes(this.props.pet.id)) {\n      //   return (\n      //     <div>\n      //       <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n      //     </div>\n      //   )\n      // } else if (pet.adopted && this.props.myAdoptedPets.includes(pet)) {\n      //   return (\n      //     <div>\n      //       <span img=\"𝔹𝕐 𝓤 ♥️\"> By You ♡ </span>\n      //     </div>\n      //   )\n      // } else if (myPetMatchIds.includes(pet.id) && this.props.myAdoptedPets.includes(pet)) {\n      //   return (\n      //     <div>\n      //       <span img=\"𝔹𝕐 𝓤 ♥️\"> By You ♡ </span>\n      //     </div>\n      //   )\n      // }\n    };\n\n    return _this;\n  }\n\n  _createClass(MyPetsButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.handleAddOrRemove(this.props.currentUser.id, this.props.pet.id));\n    }\n  }]);\n\n  return MyPetsButton;\n}(React.Component);\n\nexport default MyPetsButton;","map":{"version":3,"sources":["/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/src/components/MyPetsButton.js"],"names":["React","PetCard","MyPetsButton","handleAddOrRemove","userId","petId","console","log","props","currentUser","id","pet","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,Y;;;;;;;;;;;;;;;;;;UAEJC,iB,GAAoB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,MAAtC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAArC,EAFqC,CAGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,K;;;;;;;6BAEU;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKF,iBAAL,CAAuB,KAAKK,KAAL,CAAWC,WAAX,CAAuBC,EAA9C,EAAkD,KAAKF,KAAL,CAAWG,GAAX,CAAeD,EAAjE,CAFH,CADF;AAMC;;;;EAhEsBV,KAAK,CAACY,S;;AAmEjC,eAAeV,YAAf","sourcesContent":["import React from 'react';\nimport PetCard from './PetCard'\n\nclass MyPetsButton extends React.Component {\n\n  handleAddOrRemove = (userId, petId) => {\n    console.log(\"userId in myPetsButton\", userId)\n    console.log(\"petId in myPetsButton\", petId)\n    // console.log(\"petId in MyPetsButton\", petId)\n    // console.log(\"this.props.myPets in MyPetsButton\", this.props.myPets)\n    //   console.log(\"this.props.myAdoptedPets in MyPetsButton\", this.props.myAdoptedPets)\n    // let pet = this.props.pets.find(pet => pet.id === this.props.petId)\n    // console.log(\"pet in addorremoce\", pet)\n    // let myPetMatchIds = this.props.myPets.map(myPet => myPet.pet_id)\n    // console.log(\"myPetMatchIds in MyPetsButton\", myPetMatchIds)\n    // let matchedPet = this.props.myPets.find(petMatch => petMatch.pet_id === this.props.petId)\n    // console.log(\"matchedPet in MyPetsButton\", matchedPet)\n  //   if (!this.props.myAdoptedPets.includes(pet) && myPetMatchIds.includes(petId)) {\n  //    return <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n  //  } else if (!pet.adopted && myPetMatchIds.includes(petId)) {\n  //     return (\n  //       <div>\n  //         <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n  //         <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n  //       </div>\n  //     )\n  // } else if (!pet.adopted && !this.props.myAdoptedPets.includes(pet)) {\n  //   return (\n  //     <div>\n  //       <button className=\"ui button\" onClick={()=>this.props.handleAdopt(this.props.currentUser.id, pet.id)}>Adopt</button>\n  //       <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n  //     </div>\n  //   )\n  // } else if (pet.adopted && !this.props.myAdoptedPets.includes(pet)) {\n  //   return (\n  //     <div>\n  //       <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n  //     </div>\n  //   )\n  // } else if (pet.adopted && myPetMatchIds.includes(this.props.pet.id)) {\n  //   return (\n  //     <div>\n  //       <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n  //     </div>\n  //   )\n  // } else if (pet.adopted && this.props.myAdoptedPets.includes(pet)) {\n  //   return (\n  //     <div>\n  //       <span img=\"𝔹𝕐 𝓤 ♥️\"> By You ♡ </span>\n  //     </div>\n  //   )\n  // } else if (myPetMatchIds.includes(pet.id) && this.props.myAdoptedPets.includes(pet)) {\n  //   return (\n  //     <div>\n  //       <span img=\"𝔹𝕐 𝓤 ♥️\"> By You ♡ </span>\n  //     </div>\n  //   )\n  // }\n}\n\n  render() {\n    return (\n      <span>\n        {/* {this.props.foundPet.adopted ? <p className=\"ui button\">Adopted! </p> : <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.handleAdopt(this.props.currentUser.id, this.props.foundPet.id)}>Adopt This Pet</button>} */}\n        {this.handleAddOrRemove(this.props.currentUser.id, this.props.pet.id)}\n      </span>\n    )\n    }\n  }\n\nexport default MyPetsButton;\n"]},"metadata":{},"sourceType":"module"}