{"ast":null,"code":"import _toConsumableArray from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/src/Dashboard.js\";\nimport React, { Component } from 'react';\nimport PetContainer from './components/PetContainer';\nimport { Route } from 'react-router-dom';\n\nvar App2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App2, _Component);\n\n  function App2() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App2);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App2)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      pets: [],\n      clicked: false\n    };\n\n    _this.handleSorted = function (event) {\n      var sortedNameCopyPets = _toConsumableArray(_this.state.pets).sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n\n      if (event.target.value === \"name\") {\n        _this.setState({\n          pets: sortedNameCopyPets\n        });\n      } else if (event.target.value === \"all\") {\n        _this.setState({\n          pets: _this.state.pets\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/api/v1/pets').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          pets: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    // handleCat=(event) => {\n    //  if (this.state.clicked === false){\n    //   const allPets = [...this.state.pets]\n    //   let catsArray = allPets.filter(pet => pet.animal === \"Cat\")\n    //   return this.setState({\n    //     pets:catsArray,\n    //     clicked:!this.state.clicked\n    //   })\n    // }\n    //   else {\n    //     this.setState({\n    //       clicked:!this.state.clicked,\n    //       pets:this.state.pets\n    //     })\n    //   }\n    // }\n    //^ need to fix this function. Filters just cats, but then mutates pets state to always be just cats\n    value: function render() {\n      console.log('app2', this.props);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        component: function component(props) {\n          console.log(props);\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"text\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(PetContainer, {\n        pets: this.state.pets,\n        handleClick: this.handleClick,\n        handleSorted: this.handleSorted,\n        handleCat: this.handleCat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App2;\n}(Component);\n\nexport default App2;","map":{"version":3,"sources":["/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/src/Dashboard.js"],"names":["React","Component","PetContainer","Route","App2","state","pets","clicked","handleSorted","event","sortedNameCopyPets","sort","a","b","name","localeCompare","target","value","setState","fetch","then","response","json","data","console","log","props","handleClick","handleCat"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;IAEMC,I;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAC,EADC;AAENC,MAAAA,OAAO,EAAC;AAFF,K;;UAeRC,Y,GAAe,UAACC,KAAD,EAAW;AACxB,UAAIC,kBAAkB,GAAG,mBAAI,MAAKL,KAAL,CAAWC,IAAf,EAAqBK,IAArB,CAA0B,UAACC,CAAD,EAAGC,CAAH;AAAA,eAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CAAV;AAAA,OAA1B,CAAzB;;AACA,UAAIL,KAAK,CAACO,MAAN,CAAaC,KAAb,KAAuB,MAA3B,EAAkC;AAChC,cAAKC,QAAL,CAAc;AACdZ,UAAAA,IAAI,EAACI;AADS,SAAd;AAEG,OAHL,MAIK,IAAID,KAAK,CAACO,MAAN,CAAaC,KAAb,KAAuB,KAA3B,EAAiC;AACpC,cAAKC,QAAL,CAAc;AACdZ,UAAAA,IAAI,EAAC,MAAKD,KAAL,CAAWC;AADF,SAAd;AAGD;AACF,K;;;;;;;wCArBmB;AAAA;;AAClBa,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,QAAA,MAAI,CAACL,QAAL,CAAc;AACZZ,UAAAA,IAAI,EAAEiB;AADM,SAAd;AAGD,OANH;AAOD;;;AAeD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;6BAGW;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKC,KAAzB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAE,mBAACA,KAAD,EAAW;AAACF,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAAoB,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAAqB,SAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWC,IAA/B;AAAqC,QAAA,WAAW,EAAE,KAAKqB,WAAvD;AAAoE,QAAA,YAAY,EAAE,KAAKnB,YAAvF;AAAqG,QAAA,SAAS,EAAE,KAAKoB,SAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EA3DgB3B,S;;AA8DnB,eAAeG,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport PetContainer from './components/PetContainer'\nimport { Route } from 'react-router-dom';\n\nclass App2 extends Component {\n\n  state = {\n    pets:[],\n    clicked:false,\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/api/v1/pets')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          pets: data\n        })\n      })\n  }\n\n  handleSorted = (event) => {\n    let sortedNameCopyPets = [...this.state.pets].sort((a,b) => (a.name.localeCompare(b.name)))\n    if (event.target.value === \"name\"){\n      this.setState({\n      pets:sortedNameCopyPets\n      })}\n    else if (event.target.value === \"all\"){\n      this.setState({\n      pets:this.state.pets\n      })\n    }\n  }\n\n  // handleCat=(event) => {\n  //  if (this.state.clicked === false){\n  //   const allPets = [...this.state.pets]\n  //   let catsArray = allPets.filter(pet => pet.animal === \"Cat\")\n  //   return this.setState({\n  //     pets:catsArray,\n  //     clicked:!this.state.clicked\n  //   })\n  // }\n\n//   else {\n//     this.setState({\n//       clicked:!this.state.clicked,\n//       pets:this.state.pets\n//     })\n//   }\n// }\n\n//^ need to fix this function. Filters just cats, but then mutates pets state to always be just cats\n\n\n  render() {\n    console.log('app2', this.props)\n    return(\n      <div className=\"App\">\n        <Route path=\"/\" component={(props) => {console.log(props); return <h1>text</h1>}}/>\n        <PetContainer pets={this.state.pets} handleClick={this.handleClick} handleSorted={this.handleSorted} handleCat={this.handleCat}/>\n      </div>\n    )\n  }\n}\n\nexport default App2;\n"]},"metadata":{},"sourceType":"module"}