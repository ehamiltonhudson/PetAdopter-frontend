{"ast":null,"code":"import _toConsumableArray from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/src/App.js\";\nimport React from 'react';\nimport Dashboard from './Dashboard';\nimport Signin from './components/Signin';\nimport Signup from './components/Signup';\nimport { Route } from 'react-router-dom';\nimport ProfileContainer from \"./components/ProfileContainer\";\nvar apiMatchesAddress = 'http://localhost:3000/api/v1/matches';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      pets: [],\n      clicked: false,\n      currentUser: null,\n      myPets: []\n    };\n\n    _this.setCurrentUser = function (userObj) {\n      return _this.setState({\n        currentUser: userObj\n      }, function () {});\n    };\n\n    _this.handleMyPets = function (userId, petId) {\n      var postConfig = {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          match: {\n            pet_id: petId,\n            user_id: userId\n          }\n        })\n      };\n      fetch(apiMatchesAddress, postConfig).then(function (r) {\n        return r.json();\n      }).then(function (petMatch) {\n        var foundPet = _this.state.myPets.find(function (pet) {\n          return pet.pet_id === petId;\n        });\n\n        console.log(foundPet);\n        console.log(_this.state.myPets);\n\n        if (!foundPet) {\n          _this.setState({\n            myPets: [].concat(_toConsumableArray(_this.state.myPets), [petMatch])\n          });\n        }\n      });\n    };\n\n    _this.handleSorted = function (event) {\n      var sortedNameCopyPets = _toConsumableArray(_this.state.pets).sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n\n      var sortedIdCopyPets = _toConsumableArray(_this.state.pets).sort(function (a, b) {\n        return a.id - b.id;\n      });\n\n      if (event.target.value === \"name\") {\n        _this.setState({\n          pets: sortedNameCopyPets\n        });\n      } else if (event.target.value === \"all\") {\n        _this.setState({\n          pets: sortedIdCopyPets\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/api/v1/pets').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          pets: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: function render() {\n          return React.createElement(Dashboard, {\n            pets: _this3.state.pets,\n            handleSorted: _this3.handleSorted,\n            currentUser: _this3.state.currentUser,\n            handleMyPets: _this3.handleMyPets,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/signin\",\n        component: Signin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/signup\",\n        render: function render() {\n          return React.createElement(Signup, {\n            setCurrentUser: _this3.setCurrentUser,\n            currentUser: _this3.state.currentUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/profile\",\n        render: function render() {\n          return React.createElement(ProfileContainer, {\n            pets: _this3.state.pets,\n            myPets: _this3.state.myPets,\n            currentUser: _this3.state.currentUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/src/App.js"],"names":["React","Dashboard","Signin","Signup","Route","ProfileContainer","apiMatchesAddress","App","state","pets","clicked","currentUser","myPets","setCurrentUser","userObj","setState","handleMyPets","userId","petId","postConfig","method","headers","body","JSON","stringify","match","pet_id","user_id","fetch","then","r","json","petMatch","foundPet","find","pet","console","log","handleSorted","event","sortedNameCopyPets","sort","a","b","name","localeCompare","sortedIdCopyPets","id","target","value","response","data","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dashboard from './Dashboard';\nimport Signin from './components/Signin';\nimport Signup from './components/Signup';\nimport { Route } from 'react-router-dom';\nimport ProfileContainer from \"./components/ProfileContainer\";\n\nconst apiMatchesAddress = 'http://localhost:3000/api/v1/matches'\n\nclass App extends React.Component {\n  state = {\n    pets:[],\n    clicked:false,\n    currentUser: null,\n    myPets:[]\n\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/api/v1/pets')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          pets: data\n        })\n      })\n  }\n\n  setCurrentUser = userObj => this.setState({currentUser:userObj},()=>{\n\n  })\n\n  // handleClick = () => {\n  //   this.setState({\n  //     loggedIn:!this.state.loggedIn\n  //   })\n  // }\n\n  handleMyPets = (userId, petId) => {\n    const postConfig = {\n    \tmethod:\"POST\",\n    \theaders:{\"Content-type\":\"application/json\", \"Accept\": \"application/json\"},\n      body:JSON.stringify(\n        {match:\n          {pet_id:petId,\n            user_id:userId}\n          })\n    }\n\n    fetch(apiMatchesAddress,postConfig)\n      .then(r => r.json())\n      .then(petMatch => {\n        let foundPet = this.state.myPets.find(pet => pet.pet_id === petId)\n        console.log(foundPet)\n        console.log(this.state.myPets)\n        if (!foundPet) {\n          this.setState({\n            myPets: [...this.state.myPets, petMatch]\n          })\n        }\n      })\n  }\n\n  handleSorted = (event) => {\n    let sortedNameCopyPets = [...this.state.pets].sort((a,b) => (a.name.localeCompare(b.name)))\n    let sortedIdCopyPets = [...this.state.pets].sort((a,b) => (a.id-b.id))\n    if (event.target.value === \"name\"){\n      this.setState({\n      pets:sortedNameCopyPets\n      })}\n    else if (event.target.value === \"all\"){\n      this.setState({\n      pets:sortedIdCopyPets\n      })\n    }\n  }\n\n  render() {\n    return <>\n      <Route path='/' exact render={()=> <Dashboard pets={this.state.pets} handleSorted={this.handleSorted} currentUser={this.state.currentUser} handleMyPets={this.handleMyPets} />}/>\n      <Route path='/signin' component={Signin }/>\n      <Route path='/signup' render={() => <Signup setCurrentUser={this.setCurrentUser} currentUser={this.state.currentUser} />}\n      />\n      <Route path='/profile' render={() => <ProfileContainer pets={this.state.pets} myPets={this.state.myPets} currentUser={this.state.currentUser} />}\n      />\n    </>\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}