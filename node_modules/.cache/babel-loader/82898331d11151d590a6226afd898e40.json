{"ast":null,"code":"import _classCallCheck from \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/src/components/AddOrRemovePet.js\";\nimport React from 'react'; // import PetCard from './PetCard'\n// import '../App.css'\n\nvar AddOrRemovePet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddOrRemovePet, _React$Component);\n\n  function AddOrRemovePet() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddOrRemovePet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddOrRemovePet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleAddOrRemove = function (currentUserId, petId) {\n      var pet = _this.props.pets.find(function (pet) {\n        return pet.id === _this.props.petId;\n      });\n\n      console.log(_this.props.myPets);\n\n      var myPetMatchIds = _this.props.myPets.map(function (myPet) {\n        return myPet.pet_id;\n      });\n\n      console.log(myPetMatchIds);\n\n      var matchedPet = _this.props.myPets.find(function (petMatch) {\n        return petMatch.pet_id === _this.props.petId;\n      });\n\n      if (myPetMatchIds.includes(petId) && !_this.props.myAdoptedPets.includes(pet)) {\n        return React.createElement(\"button\", {\n          className: \"ui button\",\n          id: \"adopt-btn\",\n          onClick: function onClick() {\n            return _this.props.removeFromMyPets(matchedPet.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"Remove From My Pets\"); // if (!pet.adopted && myPetMatchIds.includes(this.props.petId)) {\n        //   return <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n      } else if (!pet.adopted && !myPetMatchIds.includes(petId)) {\n        return React.createElement(\"button\", {\n          className: \"ui button\",\n          onClick: function onClick() {\n            return _this.props.handleMyPets(_this.props.currentUser.id, petId);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Add To My Pets\");\n      } else if (pet.adopted && !myPetMatchIds.includes(petId)) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"\\u2665\\uFE0F\");\n      } else if (pet.adopted && _this.props.myAdoptedPets.includes(pet)) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \" By You \\u2665\\uFE0F\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddOrRemovePet, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props); // addOrRemovePet = (userId, petId) => {\n      // let pet = this.props.pets.find(pet => pet.id === this.props.petId)\n      // console.log(this.props.myPets)\n      // let myPetMatchIds = this.props.myPets.map(myPet => myPet.pet_id)\n      // console.log(myPetMatchIds)\n      // let matchedPet = this.props.myPets.find(petMatch => petMatch.pet_id === this.props.petId)\n      // return (\n      // if (pet.adopted === false) {\n      // return <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.handleMyPets(userId, petId)}>Add To My Pets</button>\n      // if (myPetMatchIds.includes(petId) && !this.props.myAdoptedPets.includes(pet)) {\n      // return <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.handleAddOrRemove(this.props.currentUser.id, this.props.pet.id));\n    }\n  }]);\n\n  return AddOrRemovePet;\n}(React.Component);\n\nexport default AddOrRemovePet;","map":{"version":3,"sources":["/Users/hamiltonhudson/Flatiron/Project4/PetAdopterFrontEnd/pet-adopter/src/components/AddOrRemovePet.js"],"names":["React","AddOrRemovePet","handleAddOrRemove","currentUserId","petId","pet","props","pets","find","id","console","log","myPets","myPetMatchIds","map","myPet","pet_id","matchedPet","petMatch","includes","myAdoptedPets","removeFromMyPets","adopted","handleMyPets","currentUser","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;IAEMC,c;;;;;;;;;;;;;;;;;;UAEJC,iB,GAAoB,UAACC,aAAD,EAAgBC,KAAhB,EAA0B;AAC5C,UAAIC,GAAG,GAAG,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqB,UAAAH,GAAG;AAAA,eAAIA,GAAG,CAACI,EAAJ,KAAW,MAAKH,KAAL,CAAWF,KAA1B;AAAA,OAAxB,CAAV;;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKL,KAAL,CAAWM,MAAvB;;AACA,UAAIC,aAAa,GAAG,MAAKP,KAAL,CAAWM,MAAX,CAAkBE,GAAlB,CAAsB,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACC,MAAV;AAAA,OAA3B,CAApB;;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYE,aAAZ;;AACA,UAAII,UAAU,GAAG,MAAKX,KAAL,CAAWM,MAAX,CAAkBJ,IAAlB,CAAuB,UAAAU,QAAQ;AAAA,eAAIA,QAAQ,CAACF,MAAT,KAAoB,MAAKV,KAAL,CAAWF,KAAnC;AAAA,OAA/B,CAAjB;;AACA,UAAIS,aAAa,CAACM,QAAd,CAAuBf,KAAvB,KAAiC,CAAC,MAAKE,KAAL,CAAWc,aAAX,CAAyBD,QAAzB,CAAkCd,GAAlC,CAAtC,EAA8E;AAC7E,eAAO;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,EAAE,EAAC,WAAjC;AAA6C,UAAA,OAAO,EAAE;AAAA,mBAAI,MAAKC,KAAL,CAAWe,gBAAX,CAA4BJ,UAAU,CAACR,EAAvC,CAAJ;AAAA,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP,CAD6E,CAE9E;AACA;AACD,OAJC,MAIK,IAAI,CAACJ,GAAG,CAACiB,OAAL,IAAgB,CAACT,aAAa,CAACM,QAAd,CAAuBf,KAAvB,CAArB,EAAoD;AACzD,eAAO;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,OAAO,EAAE;AAAA,mBAAI,MAAKE,KAAL,CAAWiB,YAAX,CAAwB,MAAKjB,KAAL,CAAWkB,WAAX,CAAuBf,EAA/C,EAAmDL,KAAnD,CAAJ;AAAA,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD,OAFM,MAEA,IAAIC,GAAG,CAACiB,OAAJ,IAAe,CAACT,aAAa,CAACM,QAAd,CAAuBf,KAAvB,CAApB,EAAmD;AACxD,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD,OAFM,MAEA,IAAIC,GAAG,CAACiB,OAAJ,IAAe,MAAKhB,KAAL,CAAWc,aAAX,CAAyBD,QAAzB,CAAkCd,GAAlC,CAAnB,EAA2D;AAChE,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACD;AACA,K;;;;;;;6BAEQ;AACPK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB,EADO,CAEP;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACD;AACE;;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKJ,iBAAL,CAAuB,KAAKI,KAAL,CAAWkB,WAAX,CAAuBf,EAA9C,EAAkD,KAAKH,KAAL,CAAWD,GAAX,CAAeI,EAAjE,CADH,CADF;AAKD;;;;EAvCqBT,KAAK,CAACyB,S;;AA0CnC,eAAexB,cAAf","sourcesContent":["import React from 'react';\n// import PetCard from './PetCard'\n// import '../App.css'\n\nclass AddOrRemovePet extends React.Component {\n\n  handleAddOrRemove = (currentUserId, petId) => {\n    let pet = this.props.pets.find(pet => pet.id === this.props.petId)\n    console.log(this.props.myPets)\n    let myPetMatchIds = this.props.myPets.map(myPet => myPet.pet_id)\n    console.log(myPetMatchIds)\n    let matchedPet = this.props.myPets.find(petMatch => petMatch.pet_id === this.props.petId)\n    if (myPetMatchIds.includes(petId) && !this.props.myAdoptedPets.includes(pet)) {\n     return <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n    // if (!pet.adopted && myPetMatchIds.includes(this.props.petId)) {\n    //   return <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n  } else if (!pet.adopted && !myPetMatchIds.includes(petId)) {\n    return <button className=\"ui button\" onClick={()=>this.props.handleMyPets(this.props.currentUser.id, petId)}>Add To My Pets</button>\n  } else if (pet.adopted && !myPetMatchIds.includes(petId)) {\n    return <span>♥️</span>\n  } else if (pet.adopted && this.props.myAdoptedPets.includes(pet)) {\n    return <span> By You ♥️</span>\n  }\n  }\n\n  render() {\n    console.log(this.props)\n    // addOrRemovePet = (userId, petId) => {\n      // let pet = this.props.pets.find(pet => pet.id === this.props.petId)\n      // console.log(this.props.myPets)\n      // let myPetMatchIds = this.props.myPets.map(myPet => myPet.pet_id)\n      // console.log(myPetMatchIds)\n      // let matchedPet = this.props.myPets.find(petMatch => petMatch.pet_id === this.props.petId)\n      // return (\n      // if (pet.adopted === false) {\n        // return <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.handleMyPets(userId, petId)}>Add To My Pets</button>\n       // if (myPetMatchIds.includes(petId) && !this.props.myAdoptedPets.includes(pet)) {\n         // return <button className=\"ui button\" id=\"adopt-btn\" onClick={()=>this.props.removeFromMyPets(matchedPet.id)}>Remove From My Pets</button>\n         return (\n           <div>\n             {this.handleAddOrRemove(this.props.currentUser.id, this.props.pet.id)}\n           </div>\n         )\n       }\n     }\n\nexport default AddOrRemovePet\n"]},"metadata":{},"sourceType":"module"}