{"ast":null,"code":"import _toConsumableArray from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/src/Dashboard.js\";\nimport React, { Component } from 'react';\nimport PetContainer from './components/PetContainer';\nimport { Route } from 'react-router-dom';\nimport Welcome from './Welcome';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSorted = function (event) {\n      var sortedNameCopyPets = _toConsumableArray(_this.state.pets).sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n\n      if (event.target.value === \"name\") {\n        _this.setState({\n          pets: sortedNameCopyPets\n        });\n      } else if (event.target.value === \"all\") {\n        _this.setState({\n          pets: _this.state.pets\n        });\n      }\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        loggedIn: !_this.state.loggedIn\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    // state = {\n    //   pets:[],\n    //   clicked:false,\n    //   loggedIn: false\n    // }\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/api/v1/pets').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          pets: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('dashboard', this.props);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.loggedIn ? React.createElement(PetContainer, {\n        pets: this.state.pets,\n        handleSorted: this.handleSorted,\n        handleCat: this.handleCat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }) : React.createElement(Welcome, {\n        handleClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/hamiltonhudson/github/Project4/PetAdopterFrontEnd/pet-adopter/src/Dashboard.js"],"names":["React","Component","PetContainer","Route","Welcome","Dashboard","handleSorted","event","sortedNameCopyPets","state","pets","sort","a","b","name","localeCompare","target","value","setState","handleClick","loggedIn","fetch","then","response","json","data","console","log","props","handleCat"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,S;;;;;;;;;;;;;;;;;;UAkBJC,Y,GAAe,UAACC,KAAD,EAAW;AACxB,UAAIC,kBAAkB,GAAG,mBAAI,MAAKC,KAAL,CAAWC,IAAf,EAAqBC,IAArB,CAA0B,UAACC,CAAD,EAAGC,CAAH;AAAA,eAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CAAV;AAAA,OAA1B,CAAzB;;AACA,UAAIP,KAAK,CAACS,MAAN,CAAaC,KAAb,KAAuB,MAA3B,EAAkC;AAChC,cAAKC,QAAL,CAAc;AACdR,UAAAA,IAAI,EAACF;AADS,SAAd;AAEG,OAHL,MAIK,IAAID,KAAK,CAACS,MAAN,CAAaC,KAAb,KAAuB,KAA3B,EAAiC;AACpC,cAAKC,QAAL,CAAc;AACdR,UAAAA,IAAI,EAAC,MAAKD,KAAL,CAAWC;AADF,SAAd;AAGD;AACF,K;;UAqBHS,W,GAAc,YAAM;AAClB,YAAKD,QAAL,CAAc;AACZE,QAAAA,QAAQ,EAAC,CAAC,MAAKX,KAAL,CAAWW;AADT,OAAd;AAGD,K;;;;;;;AApDC;AACA;AACA;AACA;AACA;wCAEoB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,QAAA,MAAI,CAACP,QAAL,CAAc;AACZR,UAAAA,IAAI,EAAEe;AADM,SAAd;AAGD,OANH;AAOD;;;6BAwCQ;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKC,KAA9B;AACA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKnB,KAAL,CAAWW,QAAX,GACA,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,IAA/B;AAAqC,QAAA,YAAY,EAAE,KAAKJ,YAAxD;AAAsE,QAAA,SAAS,EAAE,KAAKuB,SAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,GAGF,oBAAC,OAAD;AAAS,QAAA,WAAW,EAAE,KAAKV,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAUD;;;;EApEqBlB,S;;AAuExB,eAAeI,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PetContainer from './components/PetContainer'\nimport { Route } from 'react-router-dom';\nimport Welcome from './Welcome'\n\nclass Dashboard extends Component {\n\n  // state = {\n  //   pets:[],\n  //   clicked:false,\n  //   loggedIn: false\n  // }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/api/v1/pets')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          pets: data\n        })\n      })\n  }\n\n  handleSorted = (event) => {\n    let sortedNameCopyPets = [...this.state.pets].sort((a,b) => (a.name.localeCompare(b.name)))\n    if (event.target.value === \"name\"){\n      this.setState({\n      pets:sortedNameCopyPets\n      })}\n    else if (event.target.value === \"all\"){\n      this.setState({\n      pets:this.state.pets\n      })\n    }\n  }\n\n  // handleCat=(event) => {\n  //  if (this.state.clicked === false){\n  //   const allPets = [...this.state.pets]\n  //   let catsArray = allPets.filter(pet => pet.animal === \"Cat\")\n  //   return this.setState({\n  //     pets:catsArray,\n  //     clicked:!this.state.clicked\n  //   })\n  // }\n\n//   else {\n//     this.setState({\n//       clicked:!this.state.clicked,\n//       pets:this.state.pets\n//     })\n//   }\n// }\n\n//^ need to fix this function. Filters just cats, but then mutates pets state to always be just cats\nhandleClick = () => {\n  this.setState({\n    loggedIn:!this.state.loggedIn\n  })\n}\n\n  render() {\n    console.log('dashboard', this.props)\n    return(\n      <div className=\"App\">\n        {/* <Route path=\"/\" component={(props) => {console.log(props); return <h1>text</h1>}}/> */}\n        { this.state.loggedIn ?\n          <PetContainer pets={this.state.pets} handleSorted={this.handleSorted} handleCat={this.handleCat}/>\n        :\n        <Welcome handleClick={this.handleClick} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}